name: CI

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
  branches:
    - staging
jobs:
  Tests:
  name: Tests # название конктретной работы в pipeline
  runs-on: ubuntu-latest
  steps:
    - name: Checkout # клонируем репозиторый
  uses: actions/checkout@v2
    - name: Install dependencies
  run: yarn # устанавливаем зависимости
    - name: Test
  run: yarn test # запускаем скрипт тестами
  Deploy-Preview:
  runs-on: ubuntu-latest
  needs: Tests
  steps:
    - uses: actions/checkout@v2
    - name: Install Vercel CLI
  run: npm install --global vercel@latest
    - name: Pull Vercel Environment Information
  run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
    - name: Build Project Artifacts
  run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
    - name: Deploy Project Artifacts to Vercel
  run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}




#on:
#  push:
#    branches:
#      - main
#    paths-ignore:
#      - '.github/workflows/*'
#  pull_request:
#    branches:
#      - '*'
#    types: [opened, edited, reopened]
#
#jobs:
#  run-tests:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Restore dependencies cache
#        uses: actions/cache@v2
#        with:
#          path: ~/.cache/yarn
#          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#
#      - name: Install dependencies
#        run: yarn install --frozen-lockfile
#
#      - name: Run tests
#        run: yarn test
#
#      - name: Run tests
#        run: yarn test:e2e
#
#      - name: Run linter
#        run: yarn lint
#
#      - name: Run build
#        run: yarn build